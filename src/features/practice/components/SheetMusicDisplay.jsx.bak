import { useEffect, useRef, useImperativeHandle, forwardRef } from 'react';
import abcjs from 'abcjs';

import './SheetMusicDisplay.css';

const SheetMusicDisplay = forwardRef(({ abcNotation }, ref) => {
  const containerRef = useRef(null);
  const visualObjRef = useRef(null);

  useImperativeHandle(ref, () => ({
    getVisualObj: () => visualObjRef.current
  }));

  useEffect(() => {
    if (!containerRef.current || !abcNotation) return;

    // Calculate container width for responsive behavior
    const containerWidth = containerRef.current.clientWidth || 900;
    const useResponsive = containerWidth < 800;

    // Render ABCJS with padding and conditional responsive mode
    const visualObjArray = abcjs.renderAbc(containerRef.current, abcNotation, {
      wrap: {
        minSpacing: 1.8,
        maxSpacing: 2.8,
        preferredMeasuresPerLine: 4
      },
      // Only use responsive on smaller screens
      ...(useResponsive && { responsive: 'resize' }),
      staffwidth: 800,
      add_classes: true,
      paddingleft: 20,
      paddingright: 20,
      paddingtop: 20,
      paddingbottom: 20
    });

    if (visualObjArray && visualObjArray.length > 0) {
      visualObjRef.current = visualObjArray[0];
      console.log('âœ… Visual object stored:', visualObjRef.current);
    }

    return () => {
      if (containerRef.current) {
        containerRef.current.innerHTML = "";
      }
    }
  }, [abcNotation]);

  return (
    <>
      <div ref={containerRef} className="sheet-music"></div>
    </>
  );
});

export default SheetMusicDisplay;